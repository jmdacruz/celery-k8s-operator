
apiVersion: v1
kind: Namespace
metadata:
    name: celery-example

---
apiVersion: celery.k8s.io/v1beta1
kind: CeleryApplication
metadata:
  name: add-operator-example
  namespace: celery-example
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9102'
  labels:
    environment: development
spec:
  image: add-operator-example:latest
  celeryConfig:
    broker_url: 'redis://redis.redis.svc.cluster.local:6379/0'
    result_backend: 'redis://redis.redis.svc.cluster.local:6379/0'
    task_acks_late: True
    imports:
      - tasks
    url_prefix: /api/v1/namespaces/celery-example/services/add-operator-example-flower/proxy
  workerConfig:
    resources:
      requests:
        memory: "200Mi"
        cpu: "0.2"
      limits:
        memory: "200Mi"
        cpu: "0.2"
    replicas: 2
  flowerConfig:
    replicas: 1
  celeryVersion: "4.3.0"

---
# Example Redis deployment based on https://kubernetes.io/docs/tutorials/configuration/configure-redis-using-configmap/

apiVersion: v1
kind: Namespace
metadata:
    name: redis

---

apiVersion: v1
kind: ConfigMap
metadata:
    name: redis-config
    namespace: redis
data:
    redis-config: |
        maxmemory 1gb
        maxmemory-policy allkeys-lru

---

apiVersion: v1
kind: Pod
metadata:
  name: redis
  labels:
    name: redis
  namespace: redis
spec:
  containers:
  - name: redis
    image: redis:5.0.4
    command:
      - redis-server
      - "/redis-master/redis.conf"
    env:
    - name: MASTER
      value: "true"
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /redis-master-data
      name: data
    - mountPath: /redis-master
      name: config
  volumes:
    - name: data
      emptyDir: {}
    - name: config
      configMap:
        name: redis-config
        items:
        - key: redis-config
          path: redis.conf

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: redis
spec:
  selector:
    name: redis
  clusterIP: None
